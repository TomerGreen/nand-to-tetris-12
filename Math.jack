class Math{
	
	static Array twoToThe;
	
	function void init(){
		let twoToThe = Array.new(16);
		let twoToThe[0] = 1;
		let twoToThe[1] = 2;
		let twoToThe[2] = 4;
		let twoToThe[3] = 8;
		let twoToThe[4] = 16;
		let twoToThe[5] = 32;
		let twoToThe[6] = 64;
		let twoToThe[7] = 128;
		let twoToThe[8] = 256;
		let twoToThe[9] = 512;
		let twoToThe[10] = 1024;
		let twoToThe[11] = 2048;
		let twoToThe[12] = 4096;
		let twoToThe[13] = 8192;
		let twoToThe[14] = 16384;
		let twoToThe[15] = 32768;
		return;
	}
	
	function boolean bit(int x, int j){
		var boolean flag;
		let flag = x & twoToThe[j];
		return flag;
	}

	function int abs(int x){
		if (x<0){
			let x = -x;
			return x;
		}
		return x;
	}
	
	function int min(int x, int y){
		if (x < y){
			return x;
		}
		return y;
	}
	
	function int max(int x,int y){
		if (x > y){
			return x;
		}
		return y;
	}
	
	function boolean isSameSighn(int x, int y){
		if (x<0 & y<0){
			return true;
			}
		if (x>0 & y>0){
			return true;
			}
		return false;
	}
	
	function int mulByTwo(int num){
		let num = num + num;
		return num;
		}
		
	function int multiply(int x, int y){
		var int sum;
		var int shiftedX;
		var int i;
		var boolean bitFlag;
		var boolean SameSighn;
		
		let SameSighn = isSameSighn(x,y);
		let x = abs(x);
		let y = abs(y);
		let sum = 0;
		let shiftedX = x;
		let i = 0;
		
		while (i < 16){
			let bitFlag = bit (y, i);
			if (bitFlag = 1){
				let sum = sum + shiftedX;
			}
			let shiftedX = mulByTwo(shiftedX);
			let i = i + 1;
		}
		
		if (SameSighn = true){
			return sum;
		}
		
		let sum = -sum;
		return sum;
	}
	
	function int divide(int x, int y){
		var int q;
		var boolean SameSighn;
				
		if (y <0){
			do Sys.error(3);
			}
		if (y>x){
			return 0;
		}
		
		let SameSighn = SameSighn(x,y);
		let x = abs(x);
		let y = abs(y);

		let q = divideHelper(x,y);
		if (SameSighn = true){
			return q;
		}
		
		let q = -q;
		return q;
	}
			
	
	function int divideHelper(int x, int y){
		var int q;
		var int qMuly;
		var int twoq;
		
		if (y>x){
			return 0;
		}
		if (y<0){
			return 0;
		}
		
		let y = mulByTwo(y);
		let q = divideHelper(x,y);
		let twoq =  mulByTwo(twoq);
		let qMuly = multiply(twoq,y);
		if ((x-qMuly)<y){
			return twoq;
			}
		else{
			let twoq = twoq +1
			return twoq;
		}
			
	}
	
	function int sqrt(int x){
		var int y;
		var int beforSqrt;
		
		let y = 0; 
		
		if (x<0){
			do Sys.error(3);
		}
		while (i<8){
			let beforSqrt = y + twoToThe[i];
			let beforSqrt = mulByTwo(beforSqrt);
			if (beforSqrt < x+1){
				let y = y + twoToThe[i];
			}
		}
		return y;
	}